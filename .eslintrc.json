{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": ["react", "@typescript-eslint", "prettier"],
  "rules": {
    "no-var": "error", //requires `let` or `const` instead of `var`
    "prefer-const": "error", //requires `const` declarations for variables that are never reassigned after declared
    "prefer-template": "error", //requires template literals instead of string concatenation

    "react-hooks/rules-of-hooks": "error", //enforces these rules https://reactjs.org/docs/hooks-rules.html
    "react-hooks/exhaustive-deps": "warn",

    /* Import plugin */
    "import/named": "off",
    "import/no-unresolved": "off", // unresolved are handled by ts
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": ["builtin", "external", "parent", "sibling", "index"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],

    "@typescript-eslint/consistent-type-definitions": ["error", "type"], // Consistent with type definition either interface or type
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true
      }
    ] //requires variables to be used, but ignore unused vars in destructuring
  }
}
